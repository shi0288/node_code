var CronJob = require("cron").CronJob;
var async = require('async');
var moment = require("moment");
var dc = require('mcp_db').dc;
var prop = require('mcp_config').prop;
var esut = require("easy_util");
var log = esut.log;
var digestUtil = esut.digestUtil;
var termSer = require("mcp_service").termSer;

var cons = require('mcp_constants');
var termStatus = cons.termStatus;
var msgStatus = cons.msgStatus;
var msgType = cons.msgType;

var termHandle = require("./MasterTermHandle.js");
var termFileHandle = require("./MasterTermFileHandle.js");


var MasterHandle = function(){};

/**
 * 从池中获取需要处理的消息
 * @param cb
 */
MasterHandle.prototype.getFromPool = function(cb)
{
    log.info("get handled msg to consumer..................");
    var msg = dc.mg_msg.getConn().collection("msg");
    msg.findAndModify({status:msgStatus.HANDLED}, {},
    {$set:{status:msgStatus.PRE_FINISH}}, [], function(err, data){
        cb(err, data);
    });
}

/**
 * 处理消息
 * @param msg
 * @param cb
 */
MasterHandle.prototype.handle = function(msg, cb)
{
    var self = this;
    if(msg.type == msgType.TERM)
    {
        var table = dc.mg_msg.get("detail_term");
        table.findOne({msgId:msg._id}, {}, [], function(err, dTerm){
            termHandle.handle(msg, dTerm, cb);
        });
    }
    else if(msg.type == msgType.TERM_HIT_FILE)  //生成文件消息处理完成
    {
        var table = dc.mg_msg.get("detail_term");
        table.findOne({msgId:msg._id}, {}, [], function(err, dTerm){
            termFileHandle.handle(msg, dTerm, cb);
        });
    }
    else
    {
        cb(null);
    }
}

module.exports = new MasterHandle();