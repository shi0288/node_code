var async = require('async');
var dc = require('mcp_db').dc;

var config = require("mcp_config");
var ec = config.ec;


var CustomerService = function(){};

/**
 * 用户余额账户金额变化
 * @param amount
 * @param cb
 */
CustomerService.prototype.balanceChange = function(customer, orderId, roleId,
                                                   accountId, typeId, subjectId, amount, options, cb)
{
    var table = dc.mg.get("account");
    async.waterfall([
        //获取账户信息
        function(cb)
        {
            var cond;
            if(amount >= 0)
            {
                cond = {_id:customer.id};
            }
            else
            {
                cond = {_id:customer.id, balance:{$gt:amount*(-1)}};
                if(options && options.negetive) //可以扣成負值
                {
                    delete cond.balance;
                }
            }
            var doc = {$inc:{balance:amount}};
            table.findAndModify(cond, {}, doc, [], function(err, data){
                if(err)
                {
                    cb(ec.E0999);
                    return;
                }
                if(data)
                {
                    cb(null, data);
                }
                else
                {
                    cb(ec.E2067);
                }
            });
        },
        //保存账户操作记录
        function(account, cb)
        {
            var now = new Date().getTime();
            var obj = {roleId:roleId, accountId:accountId, typeId:typeId,
            subjectId:subjectId, amount:amount, stateBefore:account.balance,
            stateAfter:account.balance + amount, customerId:customer.id,
            orderId:orderId, createTime:now};
            account.balance = account.balance + amount;
            var moneylog = dc.main.get("moneylog");
            moneylog.save(obj, [], function(err, data){
                cb(err, account);
            });
        }
    ], function (err, account) {
        cb(err, account);
    });
}

module.exports = new CustomerService();