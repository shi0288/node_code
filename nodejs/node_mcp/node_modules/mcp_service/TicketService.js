var async = require('async');
var dc = require("mcp_db").dc;
var esut = require('easy_util');
var termStatus = require("mcp_constants").termStatus;
var log = esut.log;
var config = require('mcp_config');
var ec = config.ec;
var transaction = require('./Transaction.js');

var cons = require('mcp_constants');
var userType = cons.userType;
var msgStatus = cons.msgStatus;
var msgType = cons.msgType;
var ticketPrintQueenStatus = cons.ticketPrintQueenStatus;
var ticketPrintStatus = cons.ticketPrintStatus;
var ticketStatus = cons.ticketStatus;


var config = require('mcp_config');
var prop = config.prop;

var TicketService = function(){};

/**
 * 出票成功
 * @param cb
 */
TicketService.prototype.printSuccess = function(ticket, cb)
{
    var self = this;
    async.waterfall([
        //从出票队列中删除
        function(cb)
        {
            var table = dc.mg.get("printqueen");
            var cond = {_id:ticket.id};
            table.findAndRemove(cond, {}, [], function(err, data){
                if(data)
                {
                    cb(err, data);
                }
                else
                {
                    cb(ec.E3002);
                }
            });
        },
        //更新数据库状态
        function(backTickt, cb)
        {
            var table = dc.main.get("tticket");
            var cond = {id:ticket.id};
            var data = {$set:{printStatus:ticketPrintStatus.PRINT_SUCCESS,
                province:ticket.province, seq:ticket.seq, terminal:ticket.terminal,
                rNumber:ticket.rNumber,printTime:ticket.printTime,cashTime:ticket.cashTime}};
            backTickt.rNumber = ticket.rNumber;
            backTickt.printStatus = ticketPrintStatus.PRINT_SUCCESS;
            table.update(cond, data, [], function(err, data){
                cb(err, backTickt);
            });
        },
        //保存到算奖队列
        function(backTickt, cb)
        {
            var sep = backTickt._id%prop.drawCount;
            var colName = backTickt.gameCode + "_" + backTickt.termCode + "_" + sep;
            var table = dc.mg.getConn().collection(colName);
            table.save(backTickt, [], function(err, data){
                cb(err, backTickt);
            });
        }
    ], function (err, result) {
        cb(err, result);
    });
}

/**
 * 出票失败
 * @param cb
 */
TicketService.prototype.printFail = function(ticket, auditTermCode, cb)
{
    var self = this;
    var table = dc.main.get("tticket");
    var cond = {id:ticket.id};

    ticket.printStatus = ticketPrintStatus.PRINT_FAILURE;
    ticket.status = ticketStatus.REFUND;
    var data = {
        $set:
        {
            printStatus:ticket.printStatus,
            auditTermCode:auditTermCode,
            status:ticket.status
        }
    };
    table.update(cond, data, [], function(err, data){
        cb(err, ticket);
    });
}

/**
 * 票据中奖，设置中奖金额的时候，注意要乘上票据的倍数
 * @param ticket
 * @param cb
 */
TicketService.prototype.hit = function(ticket, cb)
{
    var table = dc.main.get("tticket");
    var cond = {id:ticket.id};
    var data = {$set:{status:ticketStatus.HIT, bonus:ticket.bonus*ticket.multiple,
    bonusBeforeTax:ticket.bonusBeforeTax*ticket.multiple,
    bonusDetail:JSON.stringify(ticket.bonusDetail),
    dNumber:ticket.dNumber, auditTermCode:ticket.auditTermCode}};
    table.update(cond, data, {}, function(err, data){
        if(cb)
        {
            cb(err, data);
        }
    });
}


/**
 * 票据未中奖
 * @param ticket
 * @param cb
 */
TicketService.prototype.notHit = function(ticket, cb)
{
    var table = dc.main.get("tticket");
    var cond = {id:ticket.id};
    var data = {$set:{status:ticketStatus.NOT_HIT,
        dNumber:ticket.dNumber, auditTermCode:ticket.auditTermCode}};
    table.update(cond, data, {}, function(err, data){
        if(cb)
        {
            cb(err, data);
        }
    });
}


/**
 * 票据未中奖
 * @param ticket
 * @param cb
 */
TicketService.prototype.newNotHit = function(dTerm, cb)
{
    var table = dc.main.get("tticket");
    var now = new Date().getTime();
    var cond = {
        printStatus:ticketPrintStatus.PRINT_SUCCESS,
        status:ticketStatus.UN_OPEN,
        termCode:dTerm.code,
        gameCode:dTerm.gameCode
    };
    var data = {
        $set:
        {
            status:ticketStatus.NOT_HIT,
            dNumber:dTerm.wNum,
            auditTermCode:dTerm.code,
            prizeTime:now
        }
    };
    table.update(cond, data, {}, function(err, data){
        cb(err, data);
    });
}

TicketService.prototype.saveHit = function(file, tableName, cb){
    var conn = dc.main.getConn();
    var star = new Date().getTime();
    var sql="load data local infile '"+file+"' replace into table "+tableName+" FIELDS TERMINATED BY '@' LINES TERMINATED BY '\n' (id,outerId,bonus,bonusDetail,bonusBeforeTax,auditTermCode,dNumber,status)" ;
    conn.execute(sql, {} ,function(err ,data){
        if(err){
            log.error(err);
            cb(err);
        }else{
            log.info("load 耗时" + (new Date().getTime() - star) + "ms");
            cb(null);
        }
    });
}



module.exports = new TicketService();